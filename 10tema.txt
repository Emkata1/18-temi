1.Структура и ресурси на компютърната система (процесор, оперативна памет, периферни устройства) -Компютърната система е съставена от няколко ключови компонента, включително процесор, оперативна памет и периферни устройства. Тези компоненти работят заедно, за да позволят на компютърната система да изпълнява различни операции и да предоставя различни услуги на потребителя.

Процесорът е сърцето на компютърната система и е отговорен за изпълнението на инструкции, които се предават на компютъра. Той е отговорен за обработката на данните и управлението на работата на останалите компоненти в системата. Процесорите се изработват в различни форми и размери, като по-новите модели имат повече ядра, което позволява на потребителите да изпълняват множество операции едновременно.

Оперативната памет е компонентът на компютърната система, който се използва за съхранение на данни, които в момента се обработват от процесора. Тя е бърза и много ефективна, като често е по-бърза от всякакъв вид външни дискове или други видове запаметяващи устройства. Оперативната памет е непостоянна запаметяваща среда, т.е. данните, които се съхраняват в нея, се губят, когато компютърът се изключи.

Периферните устройства са компонентите на компютърната система, които се използват за комуникация с външни устройства или за въвеждане и извеждане на данни. Те могат да включват монитори, принтери, клавиатури, мишки, скенери и други. Периферните устройства са важни, защото те позволяват на потребителите да комуникират с компютъра и да използват различни приложения и услуги, предоставяни от компютърната система.

Освен тези основни компоненти, компютърната система също може да включва допълнителни компоненти като твърди дискове, графични карти, звукови карти и други, които подобряват функци

2.. Структура, основни функции и компоненти на операционна система - Операционната система е програмен софтуер, който управлява работата на компютъра. Тя осигурява връзката между хардуера и приложенията, които се използват в компютърната система. Операционната система има няколко основни функции, включително управление на ресурсите на компютъра, управление на процесите, управление на файловата система и защита на данните.

Структурата на операционната система се състои от ядрото и набор от служебни програми, наречени системни програми. Ядрото е сърцето на операционната система и осигурява управлението на ресурсите на компютъра. Системните програми включват инструменти за управление на файловата система, инструменти за управление на мрежата, драйвери за устройства и други.

Операционната система има няколко основни компонента, включително:

Управление на процесите - операционната система управлява изпълнението на приложенията в компютъра. Тя предоставя ресурсите на процесите и ги управлява, за да осигури ефективна работа на компютъра.

Управление на паметта - операционната система управлява паметта на компютъра и осигурява, че приложенията имат достъп до необходимите ресурси.

Управление на файловата система - операционната система осигурява метод за организация и управление на файловете на компютъра.

Управление на мрежата - операционната система предоставя възможности за работа в мрежова среда, като се грижи за управлението на мрежовите ресурси и сигурността на данните в мрежата.

Защита на данните - операционната система предоставя механизми за защита на данните на компютъра, включително управление на достъпа до ресурсите и криптиране на данните.

Операционната система играе важна роля в работата на компютъра и предоставя удобен и ефективен начин за използване на ресурсите на компютъра.

3.Архитектура на операционните системи монолитни, многослойни и архитектура с микроядра - Архитектурата на операционните системи може да бъде монолитна, многослойна или архитектура с микроядро.

Монолитна архитектура - в тази архитектура всички компоненти на операционната система са в едно цяло. Това означава, че всички функции на операционната система, като управление на процесите, управление на паметта и управление на файловата система, са вградени в едно ядро. Това прави монолитната архитектура лесна за разработка, но трудна за поддръжка и разширение.

Многослойна архитектура - тази архитектура се състои от няколко слоя на софтуер, като всеки слой изпълнява различни функции на операционната система. Например, слой за управление на процесите, слой за управление на паметта и слой за управление на файловата система. В тази архитектура всеки слой е независим и може да бъде подменян без да се засягат другите слоеве. Това прави многослойната архитектура по-гъвкава и лесна за поддръжка и разширение.

Архитектура с микроядро - тази архитектура има минимално ядро, което осигурява само основни функции, като управление на процесите, управление на паметта и комуникация между процесите. Всички останали функции на операционната система са външни компоненти, наречени "сървъри". Това прави архитектурата с микроядро по-гъвкава и лесна за разширение, като позволява на потребителите да добавят или премахват сървъри в зависимост от техните нужди.

Всички тези архитектури имат своите предимства и недостатъци. Монолитната архитектура е лесна за разработка, но трудна за поддръжка и разширение. Многослойната архитектура е по-гъвкава и лесна за поддръжка и разширение, но може да бъде по-бавна поради използването на множество

4. Файлова структура - Файловата структура определя начина, по който файловете са организирани и съхранявани на диска. Съществуват два основни типа файлови структури - йерархична (дървовидна) и линейна.

Йерархична (дървовидна) файлова структура - тази структура се използва от операционните системи, като например Windows и Unix/Linux. Тя се състои от дървовидна йерархия от директории (папки), като всеки файл е разположен в определена директория. Всяка директория може да съдържа други директории и файлове, които са организирани по същия начин в дървовидна структура. Тази структура прави управлението на файловете лесно и организирано, като позволява на потребителите да създават, копират, преместват и изтриват файлове лесно и бързо.

Линейна файлова структура - тази структура се използва от някои приложения, като текстови редактори и бази от данни. Тя представлява последователност от данни, които се съхраняват в определен ред в един файл. Всеки запис в този файл може да бъде достъпен само след като са прочетени предишните записи. Тази структура е по-малко организирана в сравнение с йерархичната файлова структура и може да стане проблематична при обработка на големи файлове или при достъп до конкретни записи в тях.

Общо взето, изборът на файлова структура зависи от типа и целите на приложението, което използва файлове. Йерархичната файлова структура е по-подходяща за общи приложения и операционни системи, като линейната файлова структура е по-подходяща за специализирани приложения, където е необходимо бързо и ефективно достъпване на определени записи.

5.Пакетни системи - Пакетните системи са системи за обработка на данни, където данните се обработват като пакети. Това означава, че група от подобни задачи се събират и се обработват заедно, вместо да се обработват една по една. В пакетните системи операциите се изпълняват автоматично, като всяка задача се изпълнява като част от пакета в определен ред.

Основните компоненти на пакетните системи включват:

Система за подготовка на пакети - това е система за изграждане на пакетите, която включва редактиране на данни, проверка на грешки и създаване на пакетни команди за изпълнение на задачите.

Система за управление на пакетите - тази система контролира пакетните команди и изпълнението им в определен ред, както и следи за грешки и уведомява потребителите за тях.

Система за управление на ресурсите - тази система управлява ресурсите, като например паметта, дисковото пространство и процесорното време, които са необходими за изпълнение на задачите.

Пакетните системи са използвани за обработка на големи обеми от данни, като например финансови транзакции, данни за събития или медицински записи. Те са особено полезни за автоматизиране на задачи, които се изпълняват редовно и на която може да се изгради система за обработка на данни. Пакетните системи могат да бъдат настроени за изпълнение на определени задачи автоматично, без непрекъснатото участие на човек, като по този начин се ускорява и опростява процеса на обработка на данни.

6.Процеси и памет - Процесът е програма в изпълнение. Той включва кода на програмата, данните, които програмата използва, както и стека и контекста на процесора. Процесите са основна концепция в операционните системи и представляват единица от работа, която може да бъде изпълнена паралелно с други процеси.

Операционната система използва паметта за съхранение на процесите. Всяка програма, която се изпълнява в операционната система, използва определено количество памет. Паметта може да бъде разделена на различни сегменти, като всяка програма може да получи своя сегмент.

Операционната система може да използва няколко метода за управление на паметта, включително статична и динамична алокация на памет, виртуална памет и други.

Статичната алокация на памет се използва, когато програмата получава определено количество памет преди стартирането си. Този метод на управление на паметта е лесен за използване, но може да доведе до грешки, когато програмата се опитва да използва повече памет, отколкото е получила.

Динамичната алокация на памет позволява на програмата да заделя и освобождава памет по време на изпълнението си. Този метод е по-гъвкав и ефективен, но може да доведе до грешки, когато програмата заделя повече памет, отколкото има на разположение.

Виртуалната памет позволява на операционната система да заделя повече памет, отколкото физическия капацитет на системата. Това се постига чрез използване на дисковото пространство като временна памет за процесите. Този метод на управление на паметта е по-ефективен и предпочитан в съвременните операционни системи.

Всеки процес има своя адресно пространство, което включва кода на програмата, данните, стека и контекста на процесора. Операционната система използва механизми за защита на паметта, за да предотврати

7. Виртуална памет - Виртуалната памет е механизъм в операционните системи, който позволява на процесите да използват повече памет, отколкото е физически налична в компютъра. Това се постига чрез използване на дисковото пространство като временна памет за процесите.

Когато процесът се опитва да използва памет, която не е налична в физическата памет, операционната система я копира във временна област на твърдия диск, наречена страницна файлова система. След това операционната система предоставя виртуалната памет на процеса, като създава връзка между физическата и виртуалната памет. Когато процесът достъпва тази памет, операционната система автоматично я прехвърля от страницната файлова система във физическата памет.

При използване на виртуална памет, операционната система може да използва няколко метода за управление на паметта, включително странично и сегментно адресиране.

При страничното адресиране виртуалната памет е разделена на малки блокове, наречени страници. Физическата памет също е разделена на също такива страници. Операционната система следи кой процес използва коя страница във виртуалната и коя във физическата памет. Когато процесът се опитва да достъпи страница, която все още не е в физическата памет, операционната система я копира там, като освобождава друга страница, ако всички страници са заети.

При сегментното адресиране виртуалната памет е разделена на сегменти, които съдържат код, данни и стек на процеса. Тези сегменти могат да се увеличават или намаляват по време на изпълнение на процеса. Операционната система следи къде се намират сегментите във виртуалната и къде във физическата памет и прехвърля сегментите при нужда.

8.Услуги в ОС: ssh (keys), ftp, scp, мрежови 
услуги, dns, dhcp - Операционната система предоставя много различни услуги, които могат да бъдат използвани от потребителите. Някои от най-често използваните услуги включват:

SSH - Secure Shell е криптиран протокол за мрежово свързване към други компютри. Той позволява на потребителите да използват сигурна връзка за работа с компютърни системи, особено чрез използване на ключове, които представляват един от начините за автентикация.

FTP - File Transfer Protocol е протокол за прехвърляне на файлове между компютри. Той позволява на потребителите да качват и свалят файлове от различни уебсайтове и други източници.

SCP - Secure Copy е протокол за копиране на файлове между компютри. Той е основан на SSH и предоставя сигурност при прехвърлянето на файлове между различни компютърни системи.

Мрежови услуги - Операционната система предоставя различни мрежови услуги, като мрежова карта, IP адрес и мрежова конфигурация. Тези услуги позволяват на потребителите да се свързват към интернет и други мрежови ресурси.

DNS - Domain Name System е система за именуване на компютри и други мрежови ресурси. Той позволява на потребителите да използват домейни вместо IP адреси при свързване към различни уебсайтове и други ресурси.

DHCP - Dynamic Host Configuration Protocol е протокол за автоматична конфигурация на мрежови устройства. Той позволява на потребителите да получават автоматично IP адреси, мрежови настройки и други настройки за свързване към мрежата.

9.Стартиране и спиране на услуги ръчно и по график - Стартирането и спирането на услуги може да се извършва както ръчно, така и по график, в зависимост от нуждите на потребителя.

За ръчно стартиране и спиране на услуги може да се използва командният интерфейс на операционната система или специални утилити за управление на услуги. Например, в Windows може да се използва командата "net start" за стартиране на услуга и "net stop" за спиране на услуга. В Linux може да се използва командата "systemctl start" за стартиране на услуга и "systemctl stop" за спиране на услуга.

За автоматично стартиране и спиране на услуги може да се използват различни методи, включително задаване на параметри в конфигурационните файлове на операционната система, създаване на скриптове за управление на услуги и използване на планировщик на задачи за стартиране и спиране на услуги по график.

Например, в Windows може да се използва инструмента "Task Scheduler" за планиране на задачи за стартиране и спиране на услуги. В Linux може да се използва инструмента "crontab" за планиране на задачи за стартиране и спиране на услуги.

При задаването на параметри за автоматично стартиране и спиране на услуги е важно да се вземат предвид различните фактори, свързани с използването на услугата, като нуждите на потребителя, хардуерните и софтуерните изисквания, както и сигурността на системата.

10.Файлови системи - Файловата система е начинът, по който операционната система управлява файловете върху дисковете на компютъра. Това включва начина, по който файловете са организирани, как са записани на диска и как се управлява достъпа до тях.

Операционните системи поддържат различни файлови системи в зависимост от техните цели и нужди. Някои от най-известните файлови системи включват:

FAT (File Allocation Table) - това е файлова система, която е била първоначално разработена за операционната система MS-DOS. FAT е проста файлова система, която се използва и днес за устройства като USB флаш памети и SD карти.

NTFS (New Technology File System) - това е файлова система, която се използва от операционната система Windows NT и по-нови версии. NTFS поддържа по-голяма сигурност и по-голям брой функции от FAT, включително поддръжка на файлови разрешения и криптиране на файлове.

EXT (Extended File System) - това е файлова система, която се използва от Linux и други Unix-базирани операционни системи. EXT е също проста файлова система, която е била разработена с цел да работи добре с Unix-базирани операционни системи.

APFS (Apple File System) - това е файлова система, която се използва от операционната система macOS от Apple. APFS е разработена с цел да подобри бързодействието на системата, да увеличи сигурността и да поддържа съвременни технологии като криптиране на файлове и snapshots.

Файловите системи може да бъдат форматирани или монтирани на даден диск. Форматирането на диск обикновено премахва всички данни от диска и създава нова файлова система върху него. Монтажът на диск обикновено се използва, когато вече има файлова система върху диска и той просто трябва да бъде зареден, за да бъде достъпен от операционната система.

11.Shell програмиране - Shell е команден интерпретатор, който позволява на потребителя да въвежда команди и да комуникира с операционната система. Шелът позволява на потребителя да изпълнява команди, да управлява файловата система, да работи с процеси и мрежи и да изпълнява скриптове.

Shell програмирането е процес на създаване на скриптове или програми, които се изпълняват в Shell. Shell скриптовете се използват за автоматизиране на задачи и управление на системата.

Shell скриптовете са текстови файлове, които съдържат последователност от команди и декларации на променливи. Shell интерпретаторът чете и изпълнява всеки ред от скрипта един по един, като прочита и изпълнява командите, които са дефинирани в скрипта.

За да започнете да програмирате в Shell, трябва да научите синтаксиса на езика и да научите основните команди и конструкции на програмирането.

12.Създаване и изпълнение на shell скриптове - Създаването и изпълнението на shell скриптове е доста просто и се извършва в няколко стъпки:

Отваряте текстов редактор, като например nano, vim или gedit.
Създавате нов файл и записвате го с разширение ".sh". Например, може да го наречете "myscript.sh".
Записвате в скрипта командите, които искате да изпълните.
Задавате права за изпълнение на скрипта с командата "chmod +x myscript.sh".
Изпълнявате скрипта, като въведете "./myscript.sh" в терминала.

13.Виртуализация и контейнери - Виртуализацията и контейнерите са две различни технологии, които позволяват на потребителите да създават и управляват виртуални изолирани околности за изпълнение на приложения.

Виртуализацията е технология, която позволява на една машина да изпълнява множество изолирани операционни системи, наречени виртуални машини (VMs). Всяка виртуална машина има своя собствена операционна система, приложения и конфигурации. Това позволява на потребителите да изпълняват приложения, които изискват различни операционни системи и конфигурации, на една и съща физическа машина.

В контраст с това, контейнерите са технология, която позволява на потребителите да изолират и изпълняват приложения върху една и съща операционна система, но с различни файлови системи и конфигурации. Контейнерите са по-леки и по-бързи от виртуалните машини, защото не изискват отделна операционна система и хардуерна виртуализация.

За да създадете и управлявате виртуални машини, може да използвате хипервизор, като например VMware или VirtualBox. За да създадете и управлявате контейнери, може да използвате технологии като Docker или Kubernetes.

Контейнерите са особено полезни за микросервизни архитектури, където приложенията се разделят на по-малки и по-изолирани компоненти, които могат да се мащабират и обновяват поотделно. Виртуализацията се използва по-често за тестване на софтуер и управление на инфраструктурата в големи организации.




